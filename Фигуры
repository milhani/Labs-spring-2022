#include <iostream>


struct Coord {
    int x, y;

    Coord(int a, int b) {
        x = a;
        y = b;
    }
};

class Point {
private:
    Coord coord;

public:
    Point (Coord& c) : coord(c) {}

    void change_point(Coord& c) {
        coord = c;
    }

    void get_point() const {
        std::cout << coord.x << ' ' << coord.y << "\n";
    }

};


class Line {
private:
    Coord f_coord, s_coord;

public:
    Line(Coord& f, Coord& s) : f_coord(f), s_coord(s) {};

    void set_first(Coord& c) { f_coord = c; };

    void set_second(Coord& c) { s_coord = c; };

    void get_line() const {
        std::cout << (f_coord.x, f_coord.y) << ' ' << (s_coord.x, s_coord.y) << "\n";
    }
};


class Triangle {
private:
    Coord f_coord, s_coord, t_coord;

public:
    Triangle(Coord& f, Coord& s, Coord& t) : f_coord(f), s_coord(s), t_coord(t) {};

    void set_first(Coord& c) { f_coord = c; };

    void set_second(Coord& c) { s_coord = c; };

    void set_third(Coord& c) { t_coord = c; };

    void get_triangle() const {
        std::cout << (f_coord.x, f_coord.y) << ' ' <<
                  (s_coord.x, s_coord.y) << ' ' <<
                  (t_coord.x, t_coord.y) << "\n";
    }
};


class Circle {
private:
    Coord centre;
    double radius;

public:
    Circle(Coord& c, double& r) : centre(c), radius(r) {};

    Circle(Coord& c) : centre(c), radius(1.0) {};

    Circle(double& r) : centre(Coord(1, 1)), radius(r) {};

    void change_centre(Coord& c) {
        centre = c;
    }

    void change_radius(double& r) {
        radius = r;
    }

    void get_circle() {
        std::cout << "centre is " << (centre.x, centre.y) << "\n";
        std::cout << "radius is " << radius<< "\n";
    }
};


class Polygon {
private:
    int n = 0;
    Line* vertex;

public:
    Polygon(Line* lines, int nn) : vertex(lines), n(nn) {};

    void change_polygon(int ind, Line& new_l) {
        vertex[ind] = new_l;
    }
};


int main() {
}
